---
---

@string{aps = {American Physical Society,}}

@book{einstein1956investigations,
  bibtex_show={true},
  title={Investigations on the Theory of the Brownian Movement},
  author={Einstein, Albert},
  year={1956},
  publisher={Courier Corporation,},
  preview={brownian-motion.gif}
}

@article{einstein1950meaning,
  abbr={AJP},
  bibtex_show={true},
  title={The meaning of relativity},
  author={Einstein, Albert and Taub, AH},
  journal={American Journal of Physics,},
  volume={18},
  number={6},
  pages={403--404},
  year={1950},
  publisher={American Association of Physics Teachers,}
}


@article{PhysRev.47.777,
  abbr={PhysRev},
  title={Can Quantum-Mechanical Description of Physical Reality Be Considered Complete?},
  author={Einstein, A. and Podolsky, B. and Rosen, N.},
  abstract={In a complete theory there is an element corresponding to each element of reality. A sufficient condition for the reality of a physical quantity is the possibility of predicting it with certainty, without disturbing the system. In quantum mechanics in the case of two physical quantities described by non-commuting operators, the knowledge of one precludes the knowledge of the other. Then either (1) the description of reality given by the wave function in quantum mechanics is not complete or (2) these two quantities cannot have simultaneous reality. Consideration of the problem of making predictions concerning a system on the basis of measurements made on another system that had previously interacted with it leads to the result that if (1) is false then (2) is also false. One is thus led to conclude that the description of reality as given by a wave function is not complete.},
  journal={Phys. Rev.,},
  volume={47},
  issue={10},
  pages={777--780},
  numpages={0},
  year={1935},
  month={May},
  publisher=aps,
  doi={10.1103/PhysRev.47.777},
  url={http://link.aps.org/doi/10.1103/PhysRev.47.777},
  html={https://journals.aps.org/pr/abstract/10.1103/PhysRev.47.777},
  pdf={example_pdf.pdf},
}

@article{ling2022blastnet,
  abbr={SenSys'22},
  bibtex_show={false},
  selected={true},
  title={BlastNet: Exploiting Duo-Blocks for Cross-Processor Real-Time DNN Inference},
  author={Ling, Neiwen and Huang, Xuan and Zhao, Zhihe and Guan, Nan and Yan, Zhenyu and Xing, Guoliang},
  journal={Proceedings of the 20th ACM Conference on Embedded Networked Sensor Systems},
  year={2022},
  award={Best Paper Candidate},
  accept={(Acceptance ratio: 52/208=25%)},
}


@article{zhao2022iot,
  abbr={SenSys'22Poster},
  bibtex_show={false},
  selected={true},
  title={Aaron: Compile-time Kernel Adaptation for Multi-DNN Inference Acceleration on Edge GPU},
  author={Zhao, Zhihe and Ling, Neiwen and Guan, Nan and Xing, Guoliang},
  journal={Proceedings of the 20th ACM Conference on Embedded Networked Sensor Systems},
  year={2022},
  award={Best Poster Award}
}

@article{ling2021rt,
  abbr={SenSys'21},
  selected={true},
  bibtex_show={true},
  title={RT-mDL: Supporting Real-Time Mixed Deep Learning Tasks on Edge Platforms},
  author={Ling, Neiwen and Wang, Kai and He, Yuze and Xing, Guoliang and Xie, Daqi},
  abstract={Recent years have witnessed an emerging class of real-time applications, e.g., autonomous driving, in which resource-constrained edge platforms need to execute a set of real-time mixed Deep Learning (DL) tasks concurrently. Such an application paradigm poses major challenges due to the huge compute workload of deep neural network models, diverse performance requirements of different tasks, and the lack of real-time support from existing DL frameworks. In this paper, we present RT-mDL, a novel framework to support mixed real-time DL tasks on edge platform with heterogeneous CPU and GPU resource. 
  RT-mDL aims to optimize the mixed DL task execution to meet their diverse real-time/accuracy requirements by exploiting unique compute characteristics of DL tasks. RT-mDL employs a novel storage-bounded model scaling method to generate a series of model variants, and systematically optimizes the DL task execution by joint model variants selection and task priority assignment. To improve the CPU/GPU utilization of mixed DL tasks, RT-mDL also includes a new priority-based scheduler which employs a GPU packing mechanism and executes the CPU/GPU tasks independently.
  Our implementation on an F1/10 autonomous driving testbed shows that, RT-mDL can enable multiple concurrent DL tasks to achieve satisfactory real-time performance in traffic light detection and sign recognition. Moreover, compared to state-of-the-art baselines, RT-mDL can reduce deadline missing rate by 40.12\% while only sacrificing 1.7\% model accuracy. 
  },
  journal={Proceedings of the 19th ACM Conference on Embedded Networked Sensor Systems},
  pages={1--14},
  year={2021},
  doi={10.1145/3485730.3485938},
  url={https://dl.acm.org/doi/pdf/10.1145/3485730.3485938},
  html={https://dl.acm.org/doi/abs/10.1145/3485730.3485938},
  pdf={RT-mDL_SenSys2021.pdf},
  accept={(Acceptance ratio: 25/139=17.98%)}
}

@article{zhao2018ecrt,
  abbr={SenSys'18Demo},
  bibtex_show={true},
  title={ECRT: An edge computing system for real-time image-based object tracking},
  author={Zhao, Zhihe and Jiang, Zhehao and Ling, Neiwen and Shuai, Xian and Xing, Guoliang},
  journal={Proceedings of the 16th ACM Conference on Embedded Networked Sensor Systems},
  pages={394--395},
  year={2018},
  abstract = {Real-time image-based object tracking from live video is of great importance for several smart city applications like surveillance, intelligent traffic management and autonomous driving. 
  Although recent deep learning systems can achieve satisfactory tracking performance, they incur significant compute overhead, which prevents them from wide adoption on resource-constrained IoT platforms. 
  In this demonstration, we present an Edge Computing system for Real-time object Tracking (ECRT) for resource-constrained devices. 
  The key feature of our system is that it intelligently partitions compute-intensive tasks such as inferencing a convolutional neural network(CNN) into two parts, which are executed locally on an IoT device and/or on the edge server. 
  Moreover, ECRT can minimize the power consumption of IoT devices while taking into consideration the dynamic network environment and user requirement on end to end delay.},
  doi={10.1145/3274783.3275199},
  url={https://dl.acm.org/doi/pdf/10.1145/3274783.3275199},
  html={https://dl.acm.org/doi/abs/10.1145/3274783.3275199},
  pdf={ECRT.pdf},
}

@article{zhao2021edgeml,
  abbr={IoTDI'21},
  bibtex_show={true},
  selected={true},
  title={EdgeML: An AutoML framework for real-time deep learning on the edge},
  author={Zhao, Zhihe and Wang, Kai and Ling, Neiwen and Xing, Guoliang},
  abstract = {In recent years, deep learning algorithms are increasingly adopted by a wide range of data-intensive and time-critical Internet of Things (IoT) applications. 
  As a result, several new approaches, including model partition/offloading and progressive neural architecture, have been proposed to address the challenge of deploying the computation-intensive deep neural network (DNN) models on resource-constrained edge devices. 
  However, the performance of existing approaches is highly affected by runtime dynamics. For example, offloading workload from edge to cloud suffers from communication delays and the efficiency of progressive neural architecture supporting early-exit DNN executions relies on input characteristics. 
  In this paper, we introduce EdgeML, an AutoML framework that provides flexible and fine-grained DNN model execution control by combining workload offloading mechanism and dynamic progressive neural architecture. 
  To achieve desirable latency-accuracy-energy system performance on edge platforms, EdgeML adopts reinforcement learning to automatically update model execution policy in response to runtime dynamics in real-time. We implement EdgeML for several widely used DNN models on the latest edge devices. 
  Comparing to existing approaches, our experiments show that EdgeML achieves up to 8x performance improvement under dynamic environments.},
  journal={Proceedings of the 6th International Conference on Internet-of-Things Design and Implementation},
  pages={133--144},
  year={2021},
  doi={10.1145/3450268.3453520},
  url={https://dl.acm.org/doi/pdf/10.1145/3450268.3453520},
  html={https://dl.acm.org/doi/abs/10.1145/3450268.3453520},
  pdf={EdgeML_IoTDI2021.pdf},
  accept={(Acceptance ratio: 19/74=25.7%)}
}

@article{zhao2022moses,
  abbr ={arXiv},
  title={Moses: Efficient Exploitation of Cross-device Transferable Features for Tensor Program Optimization},
  bibtex_show={true},
  author={Zhao, Zhihe and Shuai, Xian and Bai, Yang and Ling, Neiwen and Guan, Nan and Yan, Zhenyu and Xing, Guoliang},
  abstract = {Achieving efficient execution of machine learning models has attracted significant attention recently. 
  To generate tensor programs efficiently, a key component of DNN compilers is the cost model that can predict the performance of each configuration on specific devices. 
  However, due to the rapid emergence of hardware platforms, it is increasingly labor-intensive to train domain-specific predictors for every new platform. 
  Besides, current design of cost models cannot provide transferable features between different hardware accelerators efficiently and effectively. 
  In this paper, we propose Moses, a simple and efficient design based on the lottery ticket hypothesis, which fully takes advantage of the features transferable to the target device via domain adaptation. 
  Compared with state-of-the-art approaches, Moses achieves up to 1.53X efficiency gain in the search stage and 1.41X inference speedup on challenging DNN benchmarks.},
  journal={arXiv preprint arXiv:2201.05752},
  year={2022},
  url={https://arxiv.org/pdf/2201.05752.pdf},
  html={https://arxiv.org/abs/2201.05752},
  pdf={moses.pdf},
}

@article{ling2022dataset,
  abbr={SenSys'22Workshop},
  bibtex_show={false},
  title={Dataset: An Indoor Smart Traffic Dataset and Data Collection System},
  author={Ling*, Neiwen and He*, Yuze and Guan, Nan and Fu, Heming and Xing, Guoliang},
  journal = {The 5th International SenSys/BuildSys Workshop on Data},
  year={2022},
}

